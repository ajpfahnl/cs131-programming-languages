12
(if % 12 20)
#t
#f
%
(not %)
(/ 1 (if % 0 0.0))
(if % a (cons a b))
(cons a b)
(cons a (if % lambda λ))
(cons (cons a (if % b c)) (cons (if % b a) c))
((if % cons list) a b)
(if % (list) (list a))
(if % (quote (a b)) (quote (a c)))
(quoth (a (if % b c)))
(if x (if % y z) z)
(if % (if x y z) (g x y z))
((lambda (a) ((if % f g) a)) (if % 1 2))
((λ (a) ((if % f g) a)) (if % 1 2))
((lambda (a!b) a!b) (if % c d))
(if % (quote ((λ (a) a) c)) (quote ((lambda (b) b) d)))
(+ (not %) ((λ (a b!c) (f a b!c)) 1 2))
((λ (a b) (f (if % a b) (if % b a))) 1 2)
((λ (a b!c) (f (if % a b!c) (if % b!c a))) 1 2)
((lambda (lambda!if) (+ lambda!if (if % if lambda!if) (f (if % lambda!if λ)))) 3)
((λ (a) ((if % eq? eqv?) a ((λ (a!b b!a) ((λ (a b) (a b)) (if % b!a a!b) (if % a!b b!a))) a (λ (a!b) (if % a!b a))))) (lambda (b!a a!b) (b!a a!b)))
